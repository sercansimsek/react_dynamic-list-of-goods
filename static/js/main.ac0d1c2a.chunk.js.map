{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","color","name","style","getAll","fetch","then","response","ok","Error","status","statusText","json","App","useState","allGoods","setAllGoods","loadGoods","a","loadedGoods","loadFirstFive","sort","b","localeCompare","slice","loadedFirstFive","loadRedOnes","filter","element","loadedRedOnes","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,oBAEEC,MAAO,CAAEF,SACT,UAAQ,OAHV,SAKGC,GAJIF,SCNN,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,ICTMC,EAAgB,WAC3B,MAAgCC,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sEACUd,IADV,OACVe,EADU,OAGhBH,EAAYG,GAHI,2CAAH,qDAMTC,EAAa,uCAAG,4BAAAF,EAAA,sEDCfd,IACJE,MAAK,SAAAR,GAAK,OAAIA,EACZuB,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAEhB,KAAKqB,cAAcD,EAAEpB,SACtCsB,MAAM,EAAG,MCJQ,OACdC,EADc,OAGpBT,EAAYS,GAHQ,2CAAH,qDAMbC,EAAW,uCAAG,4BAAAR,EAAA,sEDEbd,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAM6B,QAAO,SAACC,GAAD,MAA+B,QAAlBA,EAAQ3B,YCH/B,OACZ4B,EADY,OAGlBb,EAAYa,GAHM,2CAAH,qDAMjB,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASf,EAHX,4BAQA,wBACEc,KAAK,SACL,UAAQ,oBACRC,QAASZ,EAHX,gCASA,wBACEW,KAAK,SACL,UAAQ,aACRC,QAASN,EAHX,4BASA,cAAC,EAAD,CAAW5B,MAAOiB,QCvDxBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac0d1c2a.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, color, name }) => (\n      <li\n        key={id}\n        style={{ color }}\n        data-cy=\"good\"\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((element) => element.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [allGoods, setAllGoods] = useState<Good[]>([]);\n\n  const loadGoods = async () => {\n    const loadedGoods = await getAll();\n\n    setAllGoods(loadedGoods);\n  };\n\n  const loadFirstFive = async () => {\n    const loadedFirstFive = await get5First();\n\n    setAllGoods(loadedFirstFive);\n  };\n\n  const loadRedOnes = async () => {\n    const loadedRedOnes = await getRedGoods();\n\n    setAllGoods(loadedRedOnes);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={loadGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={loadFirstFive}\n\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={loadRedOnes}\n\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={allGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}